{"version":3,"file":"static/js/711.57de4a45.chunk.js","mappings":"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","sources":["components/Header/Header.jsx","components/Section/Section.jsx","redux/contacts/contacts-selectors.js","components/Banner/Banner.jsx","../node_modules/@mui/x-date-pickers/internals/components/PickerStaticWrapper/pickerStaticWrapperClasses.js","../node_modules/@mui/x-date-pickers/internals/components/PickerStaticWrapper/PickerStaticWrapper.js","../node_modules/@mui/x-date-pickers/StaticDatePicker/StaticDatePicker.js","components/CalendarMin/CalendarMin.styled.jsx","components/CalendarMin/CalendarMin.jsx","components/Total/Total.jsx","views/Dashboard/Dashboard.jsx"],"sourcesContent":["import { Typography, Box } from \"@mui/material\";\r\n\r\nexport default function Header({ title, subtitle }) {\r\n  return (\r\n    <Box sx={{ mb: { xs: 6, md: 2 } }}>\r\n      <Typography variant=\"h3\" fontWeight=\"bold\" sx={{ m: \"0 0 5px 0\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={\"primary.dark\"}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\n\r\nexport default function Contacts({ children }) {\r\n  return (\r\n    <Box sx={{ paddingLeft: { xs: 2, md: 4 }, paddingRight: { xs: 2, md: 4 } }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","export const selectLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const selectAllContacts = (state) => state.contacts.items;\r\n","import Box from \"@mui/material/Box\";\r\nimport banner from \"../../styles/images/main.png\";\r\n\r\nexport default function Banner() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: \"none\", md: \"block\" },\r\n      }}\r\n    >\r\n      <img src={banner} alt=\"banner\" width={540} height={540} />\r\n    </Box>\r\n  );\r\n}\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/material';\nexport function getStaticWrapperUtilityClass(slot) {\n  return generateUtilityClass('MuiPickerStaticWrapper', slot);\n}\nexport const pickerStaticWrapperClasses = generateUtilityClasses('MuiPickerStaticWrapper', ['root', 'content']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"displayStaticWrapperAs\", \"onAccept\", \"onClear\", \"onCancel\", \"onDismiss\", \"onSetToday\", \"open\", \"children\", \"components\", \"componentsProps\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport clsx from 'clsx';\nimport { DIALOG_WIDTH } from '../../constants/dimensions';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { getStaticWrapperUtilityClass } from './pickerStaticWrapperClasses';\nimport { PickersActionBar } from '../../../PickersActionBar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content']\n  };\n  return composeClasses(slots, getStaticWrapperUtilityClass, classes);\n};\n\nconst PickerStaticWrapperRoot = styled('div', {\n  name: 'MuiPickerStaticWrapper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'column'\n});\nconst PickerStaticWrapperContent = styled('div', {\n  name: 'MuiPickerStaticWrapper',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minWidth: DIALOG_WIDTH,\n  display: 'flex',\n  flexDirection: 'column',\n  backgroundColor: theme.palette.background.paper\n}));\n\nfunction PickerStaticWrapper(inProps) {\n  var _components$ActionBar;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickerStaticWrapper'\n  });\n\n  const {\n    displayStaticWrapperAs,\n    onAccept,\n    onClear,\n    onCancel,\n    onSetToday,\n    children,\n    components,\n    componentsProps,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(props);\n  const ActionBar = (_components$ActionBar = components == null ? void 0 : components.ActionBar) != null ? _components$ActionBar : PickersActionBar;\n  const PaperContent = (components == null ? void 0 : components.PaperContent) || React.Fragment;\n  return /*#__PURE__*/_jsx(WrapperVariantContext.Provider, {\n    value: displayStaticWrapperAs,\n    children: /*#__PURE__*/_jsxs(PickerStaticWrapperRoot, _extends({\n      className: clsx(classes.root, className)\n    }, other, {\n      children: [/*#__PURE__*/_jsx(PickerStaticWrapperContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(PaperContent, _extends({}, componentsProps == null ? void 0 : componentsProps.paperContent, {\n          children: children\n        }))\n      }), /*#__PURE__*/_jsx(ActionBar, _extends({\n        onAccept: onAccept,\n        onClear: onClear,\n        onCancel: onCancel,\n        onSetToday: onSetToday,\n        actions: displayStaticWrapperAs === 'desktop' ? [] : ['cancel', 'accept']\n      }, componentsProps == null ? void 0 : componentsProps.actionBar))]\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? PickerStaticWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode.\n   */\n  displayStaticWrapperAs: PropTypes.oneOf(['desktop', 'mobile']).isRequired,\n  onAccept: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n  onSetToday: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { PickerStaticWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ToolbarComponent\", \"value\", \"onChange\", \"displayStaticWrapperAs\", \"components\", \"componentsProps\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDatePickerDefaultizedProps, datePickerValueManager } from '../DatePicker/shared';\nimport { DatePickerToolbar } from '../DatePicker/DatePickerToolbar';\nimport { PickerStaticWrapper } from '../internals/components/PickerStaticWrapper/PickerStaticWrapper';\nimport { CalendarOrClockPicker } from '../internals/components/CalendarOrClockPicker';\nimport { useDateValidation } from '../internals/hooks/validation/useDateValidation';\nimport { usePickerState } from '../internals/hooks/usePickerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/x/react-date-pickers/date-picker/)\n *\n * API:\n *\n * - [StaticDatePicker API](https://mui.com/x/api/date-pickers/static-date-picker/)\n */\nexport const StaticDatePicker = /*#__PURE__*/React.forwardRef(function StaticDatePicker(inProps, ref) {\n  const props = useDatePickerDefaultizedProps(inProps, 'MuiStaticDatePicker'); // Note that we are passing down all the value without spread.\n  // It saves us >1kb gzip and make any prop available automatically on any level down.\n\n  const {\n    ToolbarComponent = DatePickerToolbar,\n    displayStaticWrapperAs = 'mobile',\n    components,\n    componentsProps,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(props, datePickerValueManager);\n  const validationError = useDateValidation(props) !== null;\n\n  const DateInputProps = _extends({}, inputProps, other, {\n    ref,\n    validationError,\n    components\n  });\n\n  return /*#__PURE__*/_jsx(PickerStaticWrapper, _extends({\n    displayStaticWrapperAs: displayStaticWrapperAs,\n    components: components,\n    componentsProps: componentsProps,\n    className: className\n  }, wrapperProps, {\n    children: /*#__PURE__*/_jsx(CalendarOrClockPicker, _extends({}, pickerProps, {\n      toolbarTitle: props.label || props.toolbarTitle,\n      ToolbarComponent: ToolbarComponent,\n      DateInputProps: DateInputProps,\n      components: components,\n      componentsProps: componentsProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StaticDatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  autoFocus: PropTypes.bool,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter's method `getWeekdays`.\n   * @returns {string} The name to display.\n   * @default (day) => day.charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode.\n   * @default 'mobile'\n   */\n  displayStaticWrapperAs: PropTypes.oneOf(['desktop', 'mobile']),\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @template TInputDate, TDate\n   * @param {TInputDate} date The date from which we want to add an aria-text.\n   * @param {MuiPickersAdapter<TDate>} utils The utils to manipulate the date.\n   * @returns {string} The aria-text to render inside the dialog.\n   * @default (date, utils) => `Choose date, selected date is ${utils.format(utils.date(date), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   * @param {CalendarPickerView} currentView The view from which we want to get the button text.\n   * @returns {string} The label of the view.\n   * @deprecated Use the `localeText` prop of `LocalizationProvider` instead, see https://mui.com/x/react-date-pickers/localization/.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   * @deprecated\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   * @template TValue\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date) changes @DateIOType.\n   * @template TValue\n   * @param {TValue} value The new parsed value.\n   * @param {string} keyboardInputValue The current value of the keyboard input.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   *\n   * @template TError, TInputValue\n   * @param {TError} reason The reason why the current value is not valid.\n   * @param {TInputValue} value The invalid value.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change @DateIOType.\n   * @template TDate\n   * @param {TDate} month The new month.\n   * @returns {void|Promise} -\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @param {CalendarPickerView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * First view to show.\n   * Must be a valid option from `views` list\n   * @default 'day'\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for day. Check the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.\n   * @template TDate\n   * @param {TDate} day The day to render.\n   * @param {Array<TDate | null>} selectedDays The days currently selected.\n   * @param {PickersDayProps<TDate>} pickersDayProps The props of the day to render.\n   * @returns {JSX.Element} The element representing the day.\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://mui.com/material-ui/api/text-field/#props) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   * @param {MuiTextFieldPropsType} props The props of the input.\n   * @returns {React.ReactNode} The node to render as the input.\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   * @param {string} str The un-formatted string.\n   * @returns {string} The formatted string.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   * @deprecated\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific months dynamically.\n   * Works like `shouldDisableDate` but for month selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} month The month to check.\n   * @returns {boolean} If `true` the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   * @default DatePickerToolbar\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the picker.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Array of views to show.\n   * @default ['year', 'day']\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired)\n} : void 0;","import { Box, styled } from \"@mui/material\";\r\n\r\nexport const Wrapper = styled(Box)(({ theme }) => ({\r\n  width: 350,\r\n  \"& .MuiPickerStaticWrapper-content\": {\r\n    backgroundColor: theme.palette.background.add,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    display: \"none\",\r\n  },\r\n  \"& .MuiTypography-overline\": {\r\n    display: \"none\",\r\n  },\r\n  \"& .MuiPickersToolbar-penIconButton\": {\r\n    display: \"none\",\r\n  },\r\n  \"& .MuiButtonBase-root\": {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n}));\r\n","import { useState } from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { StaticDatePicker } from \"@mui/x-date-pickers\";\r\nimport { Wrapper } from \"./CalendarMin.styled\";\r\n\r\nexport default function CalendarMin() {\r\n  const [value, setValue] = useState(new Date());\r\n  const isNotMobile = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  return (\r\n    <>\r\n      {isNotMobile && (\r\n        <Wrapper>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <StaticDatePicker\r\n              orientation=\"portrait\"\r\n              openTo=\"day\"\r\n              value={value}\r\n              onChange={(newValue) => {\r\n                setValue(newValue);\r\n              }}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </LocalizationProvider>\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Box, Paper, Typography } from \"@mui/material\";\r\nimport { selectAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nexport default function SimplePaper() {\r\n  const contacts = useSelector(selectAllContacts);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mb: { sm: 3 },\r\n        width: { xs: 1, sm: 350 },\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          backgroundColor: \"background.add\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          p: 1,\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontWeight: \"bold\",\r\n            fontSize: { xs: 24, sm: 28 },\r\n            color: \"primary.main\",\r\n          }}\r\n        >\r\n          Total contacts:\r\n          {contacts ? (\r\n            <Typography\r\n              component=\"span\"\r\n              sx={{\r\n                ml: 2,\r\n                fontWeight: \"bold\",\r\n                fontSize: { xs: 28, sm: 32 },\r\n                color: \"secondary.main\",\r\n              }}\r\n            >\r\n              {contacts.length}\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              component=\"span\"\r\n              sx={{\r\n                ml: 2,\r\n                fontWeight: \"bold\",\r\n                fontSize: 32,\r\n                color: \"secondary.main\",\r\n              }}\r\n            >\r\n              0\r\n            </Typography>\r\n          )}\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport Section from \"../../components/Section\";\r\nimport Banner from \"../../components/Banner\";\r\nimport CalendarMin from \"../../components/CalendarMin\";\r\nimport Header from \"../../components/Header\";\r\nimport Total from \"../../components/Total\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <Section>\r\n      <Header title=\"DASHBOARD\" subtitle=\"Welcome to your dashboard\" />\r\n      <Box\r\n        sx={{\r\n          display: { md: \"flex\" },\r\n          justifyContent: { md: \"space-around\" },\r\n        }}\r\n      >\r\n        <Banner />\r\n        <Box>\r\n          <Total />\r\n          <CalendarMin />\r\n        </Box>\r\n      </Box>\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Header","title","subtitle","Box","sx","mb","xs","md","Typography","variant","fontWeight","m","color","Contacts","children","paddingLeft","paddingRight","selectLoading","state","contacts","isLoading","selectAllContacts","items","Banner","display","src","banner","alt","width","height","getStaticWrapperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","root","content","PickerStaticWrapperRoot","styled","name","overridesResolver","props","styles","flexDirection","PickerStaticWrapperContent","theme","overflow","minWidth","DIALOG_WIDTH","backgroundColor","palette","background","paper","PickerStaticWrapper","inProps","_components$ActionBar","useThemeProps","displayStaticWrapperAs","onAccept","onClear","onCancel","onSetToday","components","componentsProps","className","other","_objectWithoutPropertiesLoose","ActionBar","PickersActionBar","PaperContent","React","_jsx","WrapperVariantContext","value","_jsxs","_extends","clsx","paperContent","actions","actionBar","StaticDatePicker","ref","useDatePickerDefaultizedProps","ToolbarComponent","DatePickerToolbar","usePickerState","datePickerValueManager","pickerProps","inputProps","wrapperProps","validationError","useDateValidation","DateInputProps","CalendarOrClockPicker","toolbarTitle","label","Wrapper","add","secondary","main","CalendarMin","useState","Date","setValue","isNotMobile","useMediaQuery","LocalizationProvider","dateAdapter","AdapterDateFns","orientation","openTo","onChange","newValue","renderInput","params","TextField","SimplePaper","useSelector","sm","Paper","elevation","justifyContent","alignItems","p","fontSize","component","ml","length","Dashboard","Section"],"sourceRoot":""}