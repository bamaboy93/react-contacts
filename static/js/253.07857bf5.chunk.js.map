{"version":3,"file":"static/js/253.07857bf5.chunk.js","mappings":"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","sources":["components/Header/Header.jsx","components/Section/Section.jsx","components/Calendar/Calendar.jsx","components/CalendarMobile/CalendarMobile.jsx","views/CalendarView/CalendarView.jsx"],"sourcesContent":["import { Typography, Box } from \"@mui/material\";\r\n\r\nexport default function Header({ title, subtitle }) {\r\n  return (\r\n    <Box sx={{ mb: { xs: 6, md: 2 } }}>\r\n      <Typography variant=\"h3\" fontWeight=\"bold\" sx={{ m: \"0 0 5px 0\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={\"primary.dark\"}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\n\r\nexport default function Contacts({ children }) {\r\n  return (\r\n    <Box sx={{ paddingLeft: { xs: 2, md: 4 }, paddingRight: { xs: 2, md: 4 } }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport { Box, Typography, List, ListItem, ListItemText } from \"@mui/material\";\r\n\r\nexport default function Calendar() {\r\n  const [currentEvents, setCurrentEvents] = useState([]);\r\n\r\n  const handleDateClick = (selected) => {\r\n    const title = prompt(\"Please enter title for your event\");\r\n    const calendarApi = selected.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: `${selected.dateStr}-${title}`,\r\n        title,\r\n        start: selected.startStr,\r\n        end: selected.endStr,\r\n        allDay: selected.allDay,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (selected) => {\r\n    if (\r\n      window.confirm(\r\n        `Are you sure you want to delete the event '${selected.event.title}'`\r\n      )\r\n    ) {\r\n      selected.event.remove();\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\">\r\n      <Box flex=\"1 1 20%\" p=\"15px\" backgroundColor=\"background.add\">\r\n        <Typography variant=\"h5\">Events</Typography>\r\n        <List>\r\n          {currentEvents.map((event) => (\r\n            <ListItem\r\n              key={event.id}\r\n              sx={{\r\n                margin: \"10px 0\",\r\n                borderRadius: \"2px\",\r\n                backgroundColor: \"secondary.dark\",\r\n              }}\r\n            >\r\n              <ListItemText\r\n                primary={event.title}\r\n                secondary={\r\n                  <Typography>\r\n                    {formatDate(event.start, {\r\n                      year: \"numeric\",\r\n                      month: \"short\",\r\n                      day: \"numeric\",\r\n                    })}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flex=\"1 1 100%\" ml=\"15px\">\r\n        <FullCalendar\r\n          height=\"75vh\"\r\n          plugins={[dayGridPlugin, interactionPlugin, timeGridPlugin]}\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n          }}\r\n          initialView=\"dayGridMonth\"\r\n          editable={true}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          dayMaxEvents={true}\r\n          select={handleDateClick}\r\n          eventClick={handleEventClick}\r\n          eventsSet={(events) => setCurrentEvents(events)}\r\n          initialEvents={[\r\n            {\r\n              id: \"1\",\r\n              title: \"Angela Birthday\",\r\n              date: \"2023-02-14\",\r\n            },\r\n            {\r\n              id: \"2\",\r\n              title: \"IT Conference\",\r\n              date: \"2023-02-28\",\r\n            },\r\n          ]}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Box, TextField } from \"@mui/material\";\r\n\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { MobileDatePicker } from \"@mui/x-date-pickers\";\r\n\r\nexport default function CalendarMin() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        \"& .MuiFormControl-root\": {\r\n          width: 1,\r\n        },\r\n      }}\r\n    >\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <MobileDatePicker\r\n          label=\"Calendar\"\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </LocalizationProvider>\r\n    </Box>\r\n  );\r\n}\r\n","import { useMediaQuery } from \"@mui/material\";\r\nimport Section from \"../../components/Section\";\r\nimport Header from \"../../components/Header\";\r\nimport Calendar from \"../../components/Calendar\";\r\nimport CalendarMobile from \"../../components/CalendarMobile\";\r\n\r\nexport default function CalendarView() {\r\n  const isDesktop = useMediaQuery(\"(min-width:767px)\");\r\n\r\n  return (\r\n    <Section>\r\n      <Header title=\"Calendar\" />\r\n      {isDesktop ? <Calendar /> : <CalendarMobile />}\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Header","title","subtitle","Box","sx","mb","xs","md","Typography","variant","fontWeight","m","color","Contacts","children","paddingLeft","paddingRight","Calendar","useState","currentEvents","setCurrentEvents","display","justifyContent","flex","p","backgroundColor","List","map","event","ListItem","margin","borderRadius","ListItemText","primary","secondary","formatDate","start","year","month","day","id","ml","height","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","select","selected","prompt","calendarApi","view","calendar","unselect","addEvent","dateStr","startStr","end","endStr","allDay","eventClick","window","confirm","remove","eventsSet","events","initialEvents","date","CalendarMin","Date","value","setValue","width","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDatePicker","label","onChange","newValue","renderInput","params","TextField","CalendarView","isDesktop","useMediaQuery","Section"],"sourceRoot":""}