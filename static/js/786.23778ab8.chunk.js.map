{"version":3,"file":"static/js/786.23778ab8.chunk.js","mappings":"sLAEe,SAASA,EAAO,GAAsB,IAApBC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACtC,OACE,UAACC,EAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAM,WAChC,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAKC,WAAW,OAAON,GAAI,CAAEO,EAAG,aAAc,SAC/DV,KAEH,SAACO,EAAA,EAAU,CAACC,QAAQ,KAAKG,MAAO,eAAe,SAC5CV,MAIT,C,+ECXe,SAASW,EAAS,GAAe,IAAbC,EAAQ,EAARA,SACjC,OACE,SAACX,EAAA,EAAG,CAACC,GAAI,CAAEW,YAAa,CAAET,GAAI,EAAGC,GAAI,GAAKS,aAAc,CAAEV,GAAI,EAAGC,GAAI,IAAM,SACxEO,GAGP,C,8ECRO,IAAMG,EAAgB,SAACC,GAAK,OAAKA,EAAMC,SAASC,SAAU,EAEpDC,EAAoB,SAACH,GAAK,OAAKA,EAAMC,SAASG,KAAM,C,0KCApDC,GAAUC,EAAAA,EAAAA,IAAOrB,EAAAA,EAAPqB,EAAY,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CACjDC,UAAWD,EAAME,QAAQ,GACzBC,OAAQ,OAER,sBAAuB,CACrBC,OAAQ,QAGV,qBAAsB,CACpBnB,WAAY,IACZoB,SAAU,IAEZ,uBAAwB,CACtBlB,MAAOa,EAAMM,QAAQC,UAAUC,MAEjC,+BAAgC,CAC9BC,gBAAiBT,EAAMM,QAAQC,UAAUG,KACzCC,aAAc,OACdN,SAAU,IAEZ,iCAAkC,CAChCI,gBAAiBT,EAAMM,QAAQM,WAAWC,KAE5C,iCAAkC,CAChCC,UAAW,OACXL,gBAAiBT,EAAMM,QAAQC,UAAUG,MAE3C,sBAAuB,CACrBvB,MAAOa,EAAMM,QAAQC,UAAUC,MAEjC,kDAAmD,CACjDrB,MAAOa,EAAMM,QAAQS,QAAQP,MAEhC,I,UC3Bc,SAASQ,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXxB,GAAWyB,EAAAA,EAAAA,IAAYvB,EAAAA,GAY7B,OACE,SAACE,EAAO,UACLJ,IACC,SAAC0B,EAAA,EAAQ,CACPC,KAAM3B,EACN4B,QAAS,CACP,CACEC,MAAO,KACPC,WAAY,SACZC,KAAM,GACNC,UAAU,EACVC,YAAa,SAACC,GAAM,gBAAQlC,EAASmC,QAAQD,EAAOE,KAAO,EAAC,GAE9D,CACEP,MAAO,OACPC,WAAY,OACZC,KAAM,EACNM,cAAe,qBAEjB,CACER,MAAO,SACPC,WAAY,eACZC,KAAM,GAER,CACEF,MAAO,SACPC,WAAY,SACZC,KAAM,GACNC,UAAU,EACVM,2BAA2B,EAE3BC,WAAY,YAAc,IAAXH,EAAG,EAAHA,IACb,OACE,SAACI,EAAA,EAAM,CACLlD,QAAQ,YACRG,MAAM,QACNR,GAAI,CAAEwD,MAAO,QACbC,QAAS,kBA/CFC,EA+CwBP,EAAIO,GA9CnDpB,GAASqB,EAAAA,EAAAA,IAAcD,SACvBE,EAAAA,GAAAA,QAAc,gCAAiC,CAC7CC,SAAU,cACVC,UAAW,IACXC,cAAc,EACd1C,MAAO,YANa,IAACqC,CA+C+B,EAAC,SACxC,UAIL,IAGJM,WAAY,CAAEC,QAASC,EAAAA,MAKjC,C,cCpEe,SAASzD,IACtB,OACE,UAAC0D,EAAA,EAAO,YACN,SAACvE,EAAA,EAAM,CAACC,MAAM,WAAWC,SAAS,2BAClC,SAACuC,EAAY,MAGnB,C","sources":["components/Header/Header.jsx","components/Section/Section.jsx","redux/contacts/contacts-selectors.js","components/ContactsGrid/ContactsGrid.styled.jsx","components/ContactsGrid/ContactsGrid.jsx","views/Contacts/Contacts.jsx"],"sourcesContent":["import { Typography, Box } from \"@mui/material\";\r\n\r\nexport default function Header({ title, subtitle }) {\r\n  return (\r\n    <Box sx={{ mb: { xs: 6, md: 2 } }}>\r\n      <Typography variant=\"h3\" fontWeight=\"bold\" sx={{ m: \"0 0 5px 0\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={\"primary.dark\"}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\n\r\nexport default function Contacts({ children }) {\r\n  return (\r\n    <Box sx={{ paddingLeft: { xs: 2, md: 4 }, paddingRight: { xs: 2, md: 4 } }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","export const selectLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const selectAllContacts = (state) => state.contacts.items;\r\n","import { Box, styled } from \"@mui/material\";\r\n\r\nexport const Wrapper = styled(Box)(({ theme }) => ({\r\n  marginTop: theme.spacing(6),\r\n  height: \"70vh\",\r\n\r\n  \"& .MuiDataGrid-root\": {\r\n    border: \"none\",\r\n  },\r\n\r\n  \"& .MuiDataGrid-row\": {\r\n    fontWeight: 700,\r\n    fontSize: 14,\r\n  },\r\n  \"& .name-column--cell\": {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  \"& .MuiDataGrid-columnHeaders\": {\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    borderBottom: \"none\",\r\n    fontSize: 14,\r\n  },\r\n  \"& .MuiDataGrid-virtualScroller\": {\r\n    backgroundColor: theme.palette.background.add,\r\n  },\r\n  \"& .MuiDataGrid-footerContainer\": {\r\n    borderTop: \"none\",\r\n    backgroundColor: theme.palette.secondary.dark,\r\n  },\r\n  \"& .MuiCheckbox-root\": {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { selectAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { Wrapper } from \"./ContactsGrid.styled\";\r\n\r\nexport default function ContactsGrid() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectAllContacts);\r\n\r\n  const onDeleteContact = (id) => {\r\n    dispatch(deleteContact(id));\r\n    toast.success(\"Contact successfully deleted!\", {\r\n      position: \"bottom-left\",\r\n      autoClose: 3000,\r\n      closeOnClick: true,\r\n      theme: \"colored\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {contacts && (\r\n        <DataGrid\r\n          rows={contacts}\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"â„–\",\r\n              flex: 0.5,\r\n              sortable: false,\r\n              valueGetter: (params) => `${contacts.indexOf(params.row) + 1}`,\r\n            },\r\n            {\r\n              field: \"name\",\r\n              headerName: \"Name\",\r\n              flex: 1,\r\n              cellClassName: \"name-column--cell\",\r\n            },\r\n            {\r\n              field: \"number\",\r\n              headerName: \"Phone Number\",\r\n              flex: 1,\r\n            },\r\n            {\r\n              field: \"action\",\r\n              headerName: \"Delete\",\r\n              flex: 0.5,\r\n              sortable: false,\r\n              disableClickEventBubbling: true,\r\n\r\n              renderCell: ({ row }) => {\r\n                return (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    sx={{ width: \"100%\" }}\r\n                    onClick={() => onDeleteContact(row.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n          components={{ Toolbar: GridToolbar }}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import Section from \"../../components/Section\";\r\nimport ContactsGrid from \"../../components/ContactsGrid\";\r\nimport Header from \"../../components/Header\";\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <Section>\r\n      <Header title=\"CONTACTS\" subtitle=\"List of your Contacts\" />\r\n      <ContactsGrid />\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Header","title","subtitle","Box","sx","mb","xs","md","Typography","variant","fontWeight","m","color","Contacts","children","paddingLeft","paddingRight","selectLoading","state","contacts","isLoading","selectAllContacts","items","Wrapper","styled","theme","marginTop","spacing","height","border","fontSize","palette","secondary","main","backgroundColor","dark","borderBottom","background","add","borderTop","primary","ContactsGrid","dispatch","useDispatch","useSelector","DataGrid","rows","columns","field","headerName","flex","sortable","valueGetter","params","indexOf","row","cellClassName","disableClickEventBubbling","renderCell","Button","width","onClick","id","deleteContact","toast","position","autoClose","closeOnClick","components","Toolbar","GridToolbar","Section"],"sourceRoot":""}